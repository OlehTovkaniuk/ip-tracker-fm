{"version":3,"sources":["components/form/Form.jsx","components/infobanner/Infobanner.jsx","img/icon-location.svg","components/map/Map.jsx","components/app/App.js","index.js"],"names":["Form","onChange","onSubmit","type","placeholder","value","onClick","Infobanner","ipData","isFetching","isError","className","ip","location","city","region","country","postalCode","timezone","isp","myIcon","L","icon","iconUrl","iconLocation","iconSize","iconAnchor","popupAnchor","Map","props","this","MapContainer","center","lat","lng","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","Component","App","useState","setIpData","setIsFetching","userInput","setUserInput","setIsError","useEffect","fetchApiData","fetch","process","test","then","response","ok","json","errData","code","messages","Error","data","console","log","catch","err","e","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc593fd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Form({ onChange, onSubmit }) {\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                placeholder=\"Search for any IP address or domain...\"\r\n            />\r\n            <input type=\"submit\" value=\">>>\" onClick={onSubmit} />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Infobanner({ ipData, isFetching, isError }) {\r\n\r\n    return (\r\n        <div className='banner-wrapper'>\r\n            {isFetching && (<p>Loading...</p>)}\r\n            {isError && (<div>\r\n                <h2>Error!</h2>\r\n                <p>Input correct IP or URL!</p>\r\n            </div>)}\r\n            {!isFetching && !isError && (<ul>\r\n                <li>\r\n                    <span>IP ADDRESS</span><br />\r\n                    <span>{ipData.ip}</span>\r\n                </li>\r\n                <li>\r\n                    <span>LOCATION</span><br />\r\n                    <span>{`${ipData.location.city}, ${ipData.location.region}, ${ipData.location.country}, ${ipData.location.postalCode}`}</span>\r\n                </li>\r\n                <li>\r\n                    <span>TIMEZONE</span><br />\r\n                    <span>{`UTC ${ipData.location.timezone}`}</span>\r\n                </li>\r\n                <li>\r\n                    <span>ISP</span><br />\r\n                    <span>{ipData.isp}</span>\r\n                </li>\r\n            </ul>)}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport iconLocation from '../../img/icon-location.svg';\r\n\r\nconst myIcon = L.icon({\r\n    iconUrl: iconLocation,\r\n    iconSize: [33, 41],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41]\r\n})\r\n\r\nexport default class Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.props.isFetching && !this.props.isError && (\r\n                    <MapContainer className='map' center={[this.props.ipData.location.lat, this.props.ipData.location.lng]} zoom={15.5} scrollWheelZoom={false}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={[this.props.ipData.location.lat, this.props.ipData.location.lng]} icon={myIcon}>\r\n                            <Popup>\r\n                                A pretty CSS3 popup. <br /> Easily customizable.\r\n                            </Popup>\r\n                        </Marker>\r\n                    </MapContainer>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport Form from '../form/Form';\nimport Infobanner from '../infobanner/Infobanner';\nimport Map from '../map/Map';\n\nfunction App() {\n  const [ipData, setIpData] = useState({});\n  const [isFetching, setIsFetching] = useState(true);\n  const [userInput, setUserInput] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchApiData();\n  }, []);\n\n  const handleUserIput = (e) => {\n    console.log(e.target.value);\n    setUserInput(e.target.value);\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchApiData();\n  }\n\n  const queryString = () => {\n    // checks kind of input data, url(domain name) or ip\n    if (/[a-z]/gi.test(userInput) === false) {\n      return `&ipAddress=${userInput}`;\n    } else {\n      return `&domain=${userInput}`\n    }\n  }\n\n  const fetchApiData = () => {\n    setIsError(false);\n    setIsFetching(true);\n    const apiKey = process.env.REACT_APP_IP_API_KEY;\n\n    fetch(`https://geo.ipify.org/api/v1?apiKey=${apiKey}${userInput ? queryString() : ''}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response.json().then(errData => {\n          const { code, messages } = errData;\n          const err = new Error(`${code} ${messages}`);\n          throw err;\n        });\n      })\n      .then(data => {\n        setIpData(data);\n        setIsFetching(false);\n        console.log('lat: ', data.location.lat, 'lng: ', data.location.lng)\n      })\n      .catch(err => {\n        setIsFetching(false);\n        setIsError(true);\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>IP Address Tracker</h1>\n      </header>\n      <Form onChange={handleUserIput} onSubmit={handleSearch} />\n      <Infobanner ipData={ipData} isFetching={isFetching} isError={isError} />\n      <Map ipData={ipData} isFetching={isFetching} isError={isError} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport 'leaflet/dist/leaflet.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}