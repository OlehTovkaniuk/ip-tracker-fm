{"version":3,"sources":["components/form/Form.jsx","components/infobanner/Infobanner.jsx","components/app/App.js","index.js"],"names":["Form","onChange","onSubmit","type","placeholder","value","onClick","Infobanner","ipData","dataIsReady","isError","className","ip","location","city","region","country","postalCode","timezone","isp","App","useState","setIpData","setDataIsReady","userInput","setUserInput","setIsError","useEffect","fetchApiData","fetch","process","test","then","response","ok","json","errData","code","messages","Error","data","catch","err","console","log","e","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEe,SAASA,EAAT,GAAuC,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAErC,OACI,iCACI,uBACIC,KAAK,OACLF,SAAUA,EACVG,YAAY,2CAEhB,uBAAOD,KAAK,SAASE,MAAM,MAAMC,QAASJ,OCTvC,SAASK,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAEtD,OACI,sBAAKC,UAAU,iBAAf,WACMF,GAAgB,2CACjBC,GAAY,gCACT,wCACA,4DAEHD,IAAgBC,GAAY,+BACzB,+BACI,8CAAuB,uBACvB,+BAAOF,EAAOI,QAElB,+BACI,4CAAqB,uBACrB,yCAAUJ,EAAOK,SAASC,KAA1B,aAAmCN,EAAOK,SAASE,OAAnD,aAA8DP,EAAOK,SAASG,QAA9E,aAA0FR,EAAOK,SAASI,iBAE9G,+BACI,4CAAqB,uBACrB,6CAAcT,EAAOK,SAASK,eAElC,+BACI,uCAAgB,uBAChB,+BAAOV,EAAOW,eC4CnBC,MAlEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNb,EADM,KACEc,EADF,OAEyBD,oBAAS,GAFlC,mBAENZ,EAFM,KAEOc,EAFP,OAGqBF,mBAAS,MAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAIiBJ,oBAAS,GAJ1B,mBAINX,EAJM,KAIGgB,EAJH,KAMbC,qBAAU,WACRC,MACC,IAEH,IAmBMA,EAAe,WACnBF,GAAW,GACXH,GAAe,GAGfM,MAAM,uCAAD,OAFUC,oCAEV,OAAiDN,GAZpB,IAA9B,UAAUO,KAAKP,GACX,cAAN,OAAqBA,GAEf,WAAN,OAAkBA,GAS8D,KAC/EQ,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXF,EAASE,OAAOH,MAAK,SAAAI,GAAY,IAC9BC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAEd,MADY,IAAIC,MAAJ,UAAaF,EAAb,YAAqBC,UAIpCN,MAAK,SAAAQ,GACJlB,EAAUkB,GACVjB,GAAe,MAEhBkB,OAAM,SAAAC,GACLhB,GAAW,GACXiB,QAAQC,IAAIF,OAIlB,OACE,sBAAK/B,UAAU,MAAf,UACE,iCACE,sDAEF,cAACX,EAAD,CAAMC,SAlDa,SAAC4C,GACtBF,QAAQC,IAAIC,EAAEC,OAAOzC,OACrBoB,EAAaoB,EAAEC,OAAOzC,QAgDYH,SA7Cf,SAAC2C,GACpBA,EAAEE,iBACFnB,OA4CE,cAACrB,EAAD,CAAYC,OAAQA,EAAQC,YAAaA,EAAaC,QAASA,QC5DrEsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.70c79b69.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Form({ onChange, onSubmit }) {\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                placeholder=\"Search for any IP address or domain...\"\r\n            />\r\n            <input type=\"submit\" value=\">>>\" onClick={onSubmit} />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Infobanner({ ipData, dataIsReady, isError }) {\r\n\r\n    return (\r\n        <div className='banner-wrapper'>\r\n            {!dataIsReady && (<p>Loading...</p>)}\r\n            {isError && (<div>\r\n                <h2>Error!</h2>\r\n                <p>Input correct IP or URL!</p>\r\n            </div>)}\r\n            {dataIsReady && !isError && (<ul>\r\n                <li>\r\n                    <span>IP ADDRESS</span><br />\r\n                    <span>{ipData.ip}</span>\r\n                </li>\r\n                <li>\r\n                    <span>LOCATION</span><br />\r\n                    <span>{`${ipData.location.city}, ${ipData.location.region}, ${ipData.location.country}, ${ipData.location.postalCode}`}</span>\r\n                </li>\r\n                <li>\r\n                    <span>TIMEZONE</span><br />\r\n                    <span>{`UTC ${ipData.location.timezone}`}</span>\r\n                </li>\r\n                <li>\r\n                    <span>ISP</span><br />\r\n                    <span>{ipData.isp}</span>\r\n                </li>\r\n            </ul>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport Form from '../form/Form';\nimport Infobanner from '../infobanner/Infobanner';\n\nfunction App() {\n  const [ipData, setIpData] = useState({});\n  const [dataIsReady, setDataIsReady] = useState(false);\n  const [userInput, setUserInput] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    fetchApiData();\n  }, []);\n\n  const handleUserIput = (e) => {\n    console.log(e.target.value);\n    setUserInput(e.target.value);\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchApiData();\n  }\n\n  const queryString = () => {\n    // checks kind of input data, url(domain name) or ip\n    if (/[a-z]/gi.test(userInput) === false) {\n      return `&ipAddress=${userInput}`;\n    } else {\n      return `&domain=${userInput}`\n    }\n  }\n\n  const fetchApiData = () => {\n    setIsError(false);\n    setDataIsReady(false);\n    const apiKey = process.env.REACT_APP_IP_API_KEY;\n\n    fetch(`https://geo.ipify.org/api/v1?apiKey=${apiKey}${userInput ? queryString() : ''}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response.json().then(errData => {\n          const { code, messages } = errData;\n          const err = new Error(`${code} ${messages}`);\n          throw err;\n        });\n      })\n      .then(data => {\n        setIpData(data);\n        setDataIsReady(true);\n      })\n      .catch(err => {\n        setIsError(true);\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>IP Address Tracker</h1>\n      </header>\n      <Form onChange={handleUserIput} onSubmit={handleSearch} />\n      <Infobanner ipData={ipData} dataIsReady={dataIsReady} isError={isError} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}