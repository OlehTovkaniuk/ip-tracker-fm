{"version":3,"sources":["components/form/Form.jsx","components/infobanner/Infobanner.jsx","img/icon-location.svg","components/map/Map.jsx","components/app/App.js","index.js"],"names":["Form","onChange","onSubmit","type","placeholder","value","onClick","Infobanner","ipData","isFetching","isError","className","ip","location","city","region","country","postalCode","timezone","isp","myIcon","L","icon","iconUrl","iconLocation","iconSize","iconAnchor","popupAnchor","Map","this","props","MapContainer","center","lat","lng","zoom","zoomControl","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","Component","App","useState","setIpData","setIsFetching","userInput","setUserInput","setIsError","useEffect","fetchApiData","fetch","process","test","then","response","ok","json","errData","code","messages","Error","data","catch","err","console","log","e","target","preventDefault","id","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04700721.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\n\r\nexport default function Form({ onChange, onSubmit }) {\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                placeholder=\"Search for any IP address or domain...\"\r\n            />\r\n            <input type=\"submit\" value=\"\" onClick={onSubmit} />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Infobanner.css';\r\n\r\nexport default function Infobanner({ ipData, isFetching, isError }) {\r\n\r\n    return (\r\n        <div className=\"banner-wrapper\">\r\n            <div className='banner'>\r\n                {isFetching && (<p>Loading...</p>)}\r\n                {isError && (<div>\r\n                    <h2>Error!</h2>\r\n                    <p>Input correct IP or URL!</p>\r\n                </div>)}\r\n                {!isFetching && !isError && (<ul>\r\n                    <li>\r\n                        <span className='span-heading'>IP ADDRESS</span><br />\r\n                        <span>{ipData.ip}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className='span-heading'>LOCATION</span><br />\r\n                        <span>{`${ipData.location.city}, ${ipData.location.region}, ${ipData.location.country}, ${ipData.location.postalCode}`}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className='span-heading'>TIMEZONE</span><br />\r\n                        <span>{`UTC ${ipData.location.timezone}`}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className='span-heading'>ISP</span><br />\r\n                        <span>{ipData.isp}</span>\r\n                    </li>\r\n                </ul>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React, { Component } from 'react';\r\nimport L from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport iconLocation from '../../img/icon-location.svg';\r\nimport './Map.css';\r\n\r\nconst myIcon = L.icon({\r\n    iconUrl: iconLocation,\r\n    iconSize: [33, 41],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41]\r\n})\r\n\r\nexport default class Map extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"map-container\">\r\n                {!this.props.isFetching && !this.props.isError && (\r\n                    <MapContainer className='map' center={[this.props.ipData.location.lat, this.props.ipData.location.lng]} zoom={15.5} zoomControl={false} scrollWheelZoom={true}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={[this.props.ipData.location.lat, this.props.ipData.location.lng]} icon={myIcon}>\r\n                            <Popup>\r\n                                A pretty CSS3 popup. <br /> Easily customizable.\r\n                            </Popup>\r\n                        </Marker>\r\n                    </MapContainer>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Form from '../form/Form';\r\nimport Infobanner from '../infobanner/Infobanner';\r\nimport Map from '../map/Map';\r\n\r\nfunction App() {\r\n  const [ipData, setIpData] = useState({});\r\n  const [isFetching, setIsFetching] = useState(true);\r\n  const [userInput, setUserInput] = useState(null);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchApiData();\r\n  }, []);\r\n\r\n  const handleUserIput = (e) => {\r\n    setUserInput(e.target.value);\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchApiData();\r\n  }\r\n\r\n  const queryString = () => {\r\n    // checks kind of input data, url(domain name) or ip\r\n    if (/[a-z]/gi.test(userInput) === false) {\r\n      return `&ipAddress=${userInput}`;\r\n    } else {\r\n      return `&domain=${userInput}`\r\n    }\r\n  }\r\n\r\n  const fetchApiData = () => {\r\n    setIsError(false);\r\n    setIsFetching(true);\r\n    const apiKey = process.env.REACT_APP_IP_API_KEY;\r\n\r\n    fetch(`https://geo.ipify.org/api/v1?apiKey=${apiKey}${userInput ? queryString() : ''}`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return response.json().then(errData => {\r\n          const { code, messages } = errData;\r\n          const err = new Error(`${code} ${messages}`);\r\n          throw err;\r\n        });\r\n      })\r\n      .then(data => {\r\n        setIpData(data);\r\n        setIsFetching(false);\r\n      })\r\n      .catch(err => {\r\n        setIsFetching(false);\r\n        setIsError(true);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"top\">\r\n        <header>\r\n          <h1>IP Address Tracker</h1>\r\n        </header>\r\n        <Form onChange={handleUserIput} onSubmit={handleSearch} />\r\n        <Infobanner ipData={ipData} isFetching={isFetching} isError={isError} />\r\n      </div>\r\n      <Map ipData={ipData} isFetching={isFetching} isError={isError} />\r\n      <footer>\r\n        <p id=\"reference\">Designed by <a href=\"https://www.frontendmentor.io/\" target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a><br />Developed by <a href=\"https://www.linkedin.com/in/oleh-tovkaniuk-456a3114a/\" target=\"_blank\" rel=\"noreferrer\">Oleh Tovkaniuk</a></p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport 'leaflet/dist/leaflet.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}